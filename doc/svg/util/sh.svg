<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: lpegNode Pages: 1 -->
<svg width="752pt" height="2130pt"
 viewBox="0.00 0.00 751.74 2129.60" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2125.6032)">
<title>lpegNode</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-2125.6032 747.7362,-2125.6032 747.7362,4 -4,4"/>
<!-- doc_0 -->
<g id="node1" class="node">
<title>doc_0</title>
<ellipse fill="none" stroke="#000000" cx="113.7362" cy="-2103.6032" rx="46.9581" ry="18"/>
<text text-anchor="middle" x="113.7362" y="-2099.4032" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">doc &#45; 122</text>
</g>
<!-- section_1 -->
<g id="node2" class="node">
<title>section_1</title>
<ellipse fill="none" stroke="#000000" cx="113.7362" cy="-2031.6032" rx="65.8187" ry="18"/>
<text text-anchor="middle" x="113.7362" y="-2027.4032" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">section: 1&#45;122</text>
</g>
<!-- doc_0&#45;&gt;section_1 -->
<g id="edge1" class="edge">
<title>doc_0&#45;&gt;section_1</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M113.7362,-2085.4346C113.7362,-2077.7342 113.7362,-2068.5776 113.7362,-2060.0199"/>
<polygon fill="#000000" stroke="#000000" points="117.2363,-2060.0165 113.7362,-2050.0165 110.2363,-2060.0165 117.2363,-2060.0165"/>
</g>
<!-- header_2 -->
<g id="node3" class="node">
<title>header_2</title>
<ellipse fill="none" stroke="#000000" cx="31.7362" cy="-1959.6032" rx="31.9741" ry="18"/>
<text text-anchor="middle" x="31.7362" y="-1955.4032" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">1 : sh</text>
</g>
<!-- section_1&#45;&gt;header_2 -->
<g id="edge2" class="edge">
<title>section_1&#45;&gt;header_2</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M93.8863,-2014.1741C82.795,-2004.4354 68.8601,-1992.1998 56.9975,-1981.7839"/>
<polygon fill="#000000" stroke="#000000" points="59.0002,-1978.8846 49.1764,-1974.9166 54.3815,-1984.1447 59.0002,-1978.8846"/>
</g>
<!-- prose_3 -->
<g id="node4" class="node">
<title>prose_3</title>
<ellipse fill="none" stroke="#000000" cx="113.7362" cy="-1959.6032" rx="32.4585" ry="18"/>
<text text-anchor="middle" x="113.7362" y="-1955.4032" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">prose</text>
</g>
<!-- section_1&#45;&gt;prose_3 -->
<g id="edge3" class="edge">
<title>section_1&#45;&gt;prose_3</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M113.7362,-2013.4346C113.7362,-2005.7342 113.7362,-1996.5776 113.7362,-1988.0199"/>
<polygon fill="#000000" stroke="#000000" points="117.2363,-1988.0165 113.7362,-1978.0165 110.2363,-1988.0165 117.2363,-1988.0165"/>
</g>
<!-- codeblock_4 -->
<g id="node5" class="node">
<title>codeblock_4</title>
<ellipse fill="none" stroke="#000000" cx="342.7362" cy="-1959.6032" rx="77.4211" ry="18"/>
<text text-anchor="middle" x="342.7362" y="-1955.4032" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">code block 3&#45;122</text>
</g>
<!-- section_1&#45;&gt;codeblock_4 -->
<g id="edge4" class="edge">
<title>section_1&#45;&gt;codeblock_4</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M157.0785,-2017.976C193.8541,-2006.4133 246.8552,-1989.7492 286.8216,-1977.1834"/>
<polygon fill="#000000" stroke="#000000" points="287.9355,-1980.5021 296.4253,-1974.1639 285.8359,-1973.8244 287.9355,-1980.5021"/>
</g>
<!-- leaf_5 -->
<g id="node6" class="node">
<title>leaf_5</title>
<polygon fill="none" stroke="#c0c0c0" points="58.7362,-1006.8016 4.7362,-1006.8016 4.7362,-970.8016 58.7362,-970.8016 58.7362,-1006.8016"/>
<text text-anchor="middle" x="31.7362" y="-985.3016" font-family="Inconsolata" font-size="14.00" fill="#000000">* sh</text>
</g>
<!-- header_2&#45;&gt;leaf_5 -->
<g id="edge5" class="edge">
<title>header_2&#45;&gt;leaf_5</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M31.7362,-1941.5031C31.7362,-1823.49 31.7362,-1163.8232 31.7362,-1017.5364"/>
<polygon fill="#000000" stroke="#000000" points="35.2363,-1017.167 31.7362,-1007.1671 28.2363,-1017.1671 35.2363,-1017.167"/>
</g>
<!-- raw_6 -->
<g id="node7" class="node">
<title>raw_6</title>
<ellipse fill="none" stroke="#000000" cx="108.7362" cy="-988.8016" rx="27" ry="18"/>
<text text-anchor="middle" x="108.7362" y="-984.6016" font-family="Helvetica,sans-Serif" font-size="14.00" fill="#000000">raw</text>
</g>
<!-- prose_3&#45;&gt;raw_6 -->
<g id="edge6" class="edge">
<title>prose_3&#45;&gt;raw_6</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M113.643,-1941.5031C113.0351,-1823.49 109.6376,-1163.8232 108.8842,-1017.5364"/>
<polygon fill="#000000" stroke="#000000" points="112.3823,-1017.1489 108.8308,-1007.1671 105.3824,-1017.185 112.3823,-1017.1489"/>
</g>
<!-- leaf_8 -->
<g id="node9" class="node">
<title>leaf_8</title>
<polygon fill="none" stroke="#c0c0c0" points="743.7362,-1905.4049 153.7362,-1905.4049 153.7362,-72.1983 743.7362,-72.1983 743.7362,-1905.4049"/>
<text text-anchor="middle" x="448.7362" y="-1890.4032" font-family="Inconsolata" font-size="14.00" fill="#000000">local M = {}</text>
<text text-anchor="middle" x="448.7362" y="-1859.0032" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; borrowed with gratitude from https://github.com/zserge/luash/blob/master/sh.lua</text>
<text text-anchor="middle" x="448.7362" y="-1843.6032" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; intro at https://zserge.com/blog/luash.html</text>
<text text-anchor="middle" x="448.7362" y="-1812.2032" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; converts key and it&#39;s argument to &quot;&#45;k&quot; or &quot;&#45;k=v&quot; or just &quot;&quot;</text>
<text text-anchor="middle" x="448.7362" y="-1796.8031" font-family="Inconsolata" font-size="14.00" fill="#000000">local function arg(k, a)</text>
<text text-anchor="middle" x="448.7362" y="-1781.4031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if not a then return k end</text>
<text text-anchor="middle" x="448.7362" y="-1766.0031" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if type(a) == &#39;string&#39; and #a &gt; 0 then return k..&#39;=\&#39;&#39;..a..&#39;\&#39;&#39; end</text>
<text text-anchor="middle" x="448.7362" y="-1750.603" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if type(a) == &#39;number&#39; then return k..&#39;=&#39;..tostring(a) end</text>
<text text-anchor="middle" x="448.7362" y="-1735.203" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;if type(a) == &#39;boolean&#39; and a == true then return k end</text>
<text text-anchor="middle" x="448.7362" y="-1719.803" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;error(&#39;invalid argument type&#39;, type(a), a)</text>
<text text-anchor="middle" x="448.7362" y="-1704.4029" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="448.7362" y="-1673.0029" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; converts nested tables into a flat list of arguments and concatenated input</text>
<text text-anchor="middle" x="448.7362" y="-1657.6029" font-family="Inconsolata" font-size="14.00" fill="#000000">local function flatten(t)</text>
<text text-anchor="middle" x="448.7362" y="-1642.2028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local result = {args = {}, input = &#39;&#39;}</text>
<text text-anchor="middle" x="448.7362" y="-1610.8028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local function f(t)</text>
<text text-anchor="middle" x="448.7362" y="-1595.4028" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local keys = {}</text>
<text text-anchor="middle" x="448.7362" y="-1580.0027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for k = 1, #t do</text>
<text text-anchor="middle" x="448.7362" y="-1564.6027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;keys[k] = true</text>
<text text-anchor="middle" x="448.7362" y="-1549.2027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local v = t[k]</text>
<text text-anchor="middle" x="448.7362" y="-1533.8027" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if type(v) == &#39;table&#39; then</text>
<text text-anchor="middle" x="448.7362" y="-1518.4026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;f(v)</text>
<text text-anchor="middle" x="448.7362" y="-1503.0026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</text>
<text text-anchor="middle" x="448.7362" y="-1487.6026" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result.args, v)</text>
<text text-anchor="middle" x="448.7362" y="-1472.2025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-1456.8025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-1441.4025" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for k, v in pairs(t) do</text>
<text text-anchor="middle" x="448.7362" y="-1426.0024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if k == &#39;__input&#39; then</text>
<text text-anchor="middle" x="448.7362" y="-1410.6024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;result.input = result.input .. v</text>
<text text-anchor="middle" x="448.7362" y="-1395.2024" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;elseif not keys[k] and k:sub(1, 1) ~= &#39;_&#39; then</text>
<text text-anchor="middle" x="448.7362" y="-1379.8023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local key = &#39;&#45;&#39;..k</text>
<text text-anchor="middle" x="448.7362" y="-1364.4023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if #k &gt; 1 then key = &#39;&#45;&#39; ..key end</text>
<text text-anchor="middle" x="448.7362" y="-1349.0023" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;table.insert(result.args, arg(key, v))</text>
<text text-anchor="middle" x="448.7362" y="-1333.6022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-1318.2022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-1302.8022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-1271.4022" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;f(t)</text>
<text text-anchor="middle" x="448.7362" y="-1256.0021" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return result</text>
<text text-anchor="middle" x="448.7362" y="-1240.6021" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="448.7362" y="-1209.2021" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; returns a function that executes the command with given args and returns its</text>
<text text-anchor="middle" x="448.7362" y="-1193.802" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; output, exit status etc</text>
<text text-anchor="middle" x="448.7362" y="-1178.402" font-family="Inconsolata" font-size="14.00" fill="#000000">local function command(cmd, ...)</text>
<text text-anchor="middle" x="448.7362" y="-1163.002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local prearg = {...}</text>
<text text-anchor="middle" x="448.7362" y="-1147.6019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return function(...)</text>
<text text-anchor="middle" x="448.7362" y="-1132.2019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local args = flatten({...})</text>
<text text-anchor="middle" x="448.7362" y="-1116.8019" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local s = cmd</text>
<text text-anchor="middle" x="448.7362" y="-1101.4018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for _, v in ipairs(prearg) do</text>
<text text-anchor="middle" x="448.7362" y="-1086.0018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s = s .. &#39; &#39; .. v</text>
<text text-anchor="middle" x="448.7362" y="-1070.6018" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-1055.2017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;for k, v in pairs(args.args) do</text>
<text text-anchor="middle" x="448.7362" y="-1039.8017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s = s .. &#39; &#39; .. v</text>
<text text-anchor="middle" x="448.7362" y="-1024.4017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-993.0017" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;if args.input then</text>
<text text-anchor="middle" x="448.7362" y="-977.6016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;local f = io.open(M.tmpfile, &#39;w&#39;)</text>
<text text-anchor="middle" x="448.7362" y="-962.2016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;f:write(args.input)</text>
<text text-anchor="middle" x="448.7362" y="-946.8016" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;f:close()</text>
<text text-anchor="middle" x="448.7362" y="-931.4015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s = s .. &#39; &lt;&#39;..M.tmpfile</text>
<text text-anchor="middle" x="448.7362" y="-916.0015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-900.6015" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local p = io.popen(s, &#39;r&#39;)</text>
<text text-anchor="middle" x="448.7362" y="-885.2014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local output = p:read(&#39;*a&#39;)</text>
<text text-anchor="middle" x="448.7362" y="-869.8014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local _, exit, status = p:close()</text>
<text text-anchor="middle" x="448.7362" y="-854.4014" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;os.remove(M.tmpfile)</text>
<text text-anchor="middle" x="448.7362" y="-823.0013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local t = {</text>
<text text-anchor="middle" x="448.7362" y="-807.6013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;__input = output,</text>
<text text-anchor="middle" x="448.7362" y="-792.2013" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;__exitcode = exit == &#39;exit&#39; and status or 127,</text>
<text text-anchor="middle" x="448.7362" y="-776.8012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;__signal = exit == &#39;signal&#39; and status or 0,</text>
<text text-anchor="middle" x="448.7362" y="-761.4012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;}</text>
<text text-anchor="middle" x="448.7362" y="-746.0012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;local mt = {</text>
<text text-anchor="middle" x="448.7362" y="-730.6012" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;__index = function(self, k, ...)</text>
<text text-anchor="middle" x="448.7362" y="-715.2011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return _G[k] &#45;&#45;, ...</text>
<text text-anchor="middle" x="448.7362" y="-699.8011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end,</text>
<text text-anchor="middle" x="448.7362" y="-684.4011" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;__tostring = function(self)</text>
<text text-anchor="middle" x="448.7362" y="-669.001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#45;&#45; return trimmed command output as a string</text>
<text text-anchor="middle" x="448.7362" y="-653.601" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return self.__input:match(&#39;^%s*(.&#45;)%s*$&#39;)</text>
<text text-anchor="middle" x="448.7362" y="-638.201" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-622.8009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;}</text>
<text text-anchor="middle" x="448.7362" y="-607.4009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return setmetatable(t, mt)</text>
<text text-anchor="middle" x="448.7362" y="-592.0009" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-576.6008" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="448.7362" y="-545.2008" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; get global metatable</text>
<text text-anchor="middle" x="448.7362" y="-529.8008" font-family="Inconsolata" font-size="14.00" fill="#000000">local mt = getmetatable(_G)</text>
<text text-anchor="middle" x="448.7362" y="-514.4007" font-family="Inconsolata" font-size="14.00" fill="#000000">if mt == nil then</text>
<text text-anchor="middle" x="448.7362" y="-499.0007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;mt = {}</text>
<text text-anchor="middle" x="448.7362" y="-483.6007" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;setmetatable(_G, mt)</text>
<text text-anchor="middle" x="448.7362" y="-468.2007" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="448.7362" y="-436.8006" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; set hook for undefined variables</text>
<text text-anchor="middle" x="448.7362" y="-421.4006" font-family="Inconsolata" font-size="14.00" fill="#000000">mt.__index = function(t, cmd)</text>
<text text-anchor="middle" x="448.7362" y="-406.0006" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return command(cmd)</text>
<text text-anchor="middle" x="448.7362" y="-390.6005" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="448.7362" y="-359.2005" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; export command() function and configurable temporary &quot;input&quot; file</text>
<text text-anchor="middle" x="448.7362" y="-343.8005" font-family="Inconsolata" font-size="14.00" fill="#000000">M.command = command</text>
<text text-anchor="middle" x="448.7362" y="-328.4004" font-family="Inconsolata" font-size="14.00" fill="#000000">M.tmpfile = &#39;/tmp/shluainput&#39;</text>
<text text-anchor="middle" x="448.7362" y="-297.0004" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; Provide a method to clean up the namespace</text>
<text text-anchor="middle" x="448.7362" y="-281.6004" font-family="Inconsolata" font-size="14.00" fill="#000000">M.clear_G = function(sh)</text>
<text text-anchor="middle" x="448.7362" y="-266.2003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;local metameta = getmetatable(getmetatable(_G))</text>
<text text-anchor="middle" x="448.7362" y="-250.8003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;setmetatable(_G, metameta)</text>
<text text-anchor="middle" x="448.7362" y="-235.4003" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;return sh</text>
<text text-anchor="middle" x="448.7362" y="-220.0002" font-family="Inconsolata" font-size="14.00" fill="#000000">end</text>
<text text-anchor="middle" x="448.7362" y="-188.6002" font-family="Inconsolata" font-size="14.00" fill="#000000">&#45;&#45; allow to call sh to run shell commands</text>
<text text-anchor="middle" x="448.7362" y="-173.2002" font-family="Inconsolata" font-size="14.00" fill="#000000">setmetatable(M, {</text>
<text text-anchor="middle" x="448.7362" y="-157.8002" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;__call = function(_, cmd, ...)</text>
<text text-anchor="middle" x="448.7362" y="-142.4001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;return command(cmd, ...)</text>
<text text-anchor="middle" x="448.7362" y="-127.0001" font-family="Inconsolata" font-size="14.00" fill="#000000"> &#160;&#160;&#160;end</text>
<text text-anchor="middle" x="448.7362" y="-111.6001" font-family="Inconsolata" font-size="14.00" fill="#000000">})</text>
<text text-anchor="middle" x="448.7362" y="-80.2" font-family="Inconsolata" font-size="14.00" fill="#000000">return M</text>
</g>
<!-- codeblock_4&#45;&gt;leaf_8 -->
<g id="edge8" class="edge">
<title>codeblock_4&#45;&gt;leaf_8</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M344.7125,-1941.5031C345.4665,-1934.5972 346.4231,-1925.8365 347.5591,-1915.4324"/>
<polygon fill="#000000" stroke="#000000" points="351.046,-1915.7426 348.6522,-1905.4217 344.0873,-1914.9827 351.046,-1915.7426"/>
</g>
<!-- leaf_7 -->
<g id="node8" class="node">
<title>leaf_7</title>
<polygon fill="none" stroke="#c0c0c0" points="135.7362,-36 81.7362,-36 81.7362,0 135.7362,0 135.7362,-36"/>
</g>
<!-- raw_6&#45;&gt;leaf_7 -->
<g id="edge7" class="edge">
<title>raw_6&#45;&gt;leaf_7</title>
<path fill="none" stroke="#000000" stroke-dasharray="5,2" d="M108.7362,-970.7015C108.7362,-852.6884 108.7362,-193.0216 108.7362,-46.7347"/>
<polygon fill="#000000" stroke="#000000" points="112.2363,-46.3654 108.7362,-36.3655 105.2363,-46.3655 112.2363,-46.3654"/>
</g>
</g>
</svg>
