digraph lpegNode {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 19"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-19"]


// END RANK doc_0

section_1 -> { header_2 prose_3 prose_4 prose_5 prose_6 prose_7 prose_8}
{rank=same; header_2 prose_3 prose_4 prose_5 prose_6 prose_7 prose_8}

header_2 [label="1 : Concordance #Todo [ ]  Write"]

prose_3 [label="prose"]

prose_4 [label="prose"]

prose_5 [label="prose"]

prose_6 [label="prose"]

prose_7 [label="prose"]

prose_8 [label="prose"]


// END RANK section_1

header_2 -> leaf_9
leaf_9  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Concordance #Todo [ ]  Write"]
// END RANK header_2

prose_3 -> { raw_10}
{rank=same; raw_10}

raw_10 [label="raw"]


// END RANK prose_3

raw_10 -> leaf_11
leaf_11  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  A versioned or published edition of a codex deserves a perfect concordance.
"]
// END RANK raw_10

prose_4 -> { raw_12}
{rank=same; raw_12}

raw_12 [label="raw"]


// END RANK prose_4

raw_12 -> leaf_13
leaf_13  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This is the co-product of a book, in a sense.
"]
// END RANK raw_12

prose_5 -> { raw_14 prespace_15 literal_16 raw_17}
{rank=same; raw_14 prespace_15 literal_16 raw_17}

raw_14 [label="raw"]

prespace_15 [label="prespace"]

literal_16 [label="literal"]

raw_17 [label="raw"]


// END RANK prose_5

raw_14 -> leaf_18
leaf_18  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
We do this at the letter level, punctuation included, every codepoint which
makes an appearance is stored with each and every offset into the original"]
// END RANK raw_14

prespace_15 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
// END RANK prespace_15

literal_16 -> leaf_20
leaf_20  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".orb"]
// END RANK literal_16

raw_17 -> leaf_21
leaf_21  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" file.
"]
// END RANK raw_17

prose_6 -> { raw_22}
{rank=same; raw_22}

raw_22 [label="raw"]


// END RANK prose_6

raw_22 -> leaf_23
leaf_23  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
We also do this at the word boundary level, and indeed, as we grow in power
and sophistication, on the morphemic and grammatical particle levels, and
phonemics, phrasals
"]
// END RANK raw_22

prose_7 -> { raw_24}
{rank=same; raw_24}

raw_24 [label="raw"]


// END RANK prose_7

raw_24 -> leaf_25
leaf_25  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Thing is this is superlinear by a constant factor and it gets thinner as you
raise complexity.
"]
// END RANK raw_24

prose_8 -> { raw_26}
{rank=same; raw_26}

raw_26 [label="raw"]


// END RANK prose_8

raw_26 -> leaf_27
leaf_27  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
There's no reason not to put it on a yield loop on the main channel, it'll
sort out and then we just have it."]
// END RANK raw_26


}
