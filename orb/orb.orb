* Orb


A metalanguage for magic spells.


** Core

We put =core= in the global namespace, and =nil= it out on exit.

This is kind of a bad habit, but there's nothing really /wrong/ with it, so
it's not worth fixing in this case.  But I don't expect to do it elsewhere.

#!lua
core = require "core:core"
#/lua


** Orb

#!lua
local Orb = {}
#/lua


*** _Bridge.orb_home

As with =helm=, we set a directory for Orb configuration.

Orb doesn't currently have a dedicated SQLite database, but it inevitably will.

It does have an (optional) global Manifest.

For now I'm going to hard-code it off =$BRIDGE_HOME=, but it will eventually
follow the usual pattern of allowing an =$ORB_HOME= environment variable to
specify an arbitrary directory.

#!lua
assert(_Bridge.bridge_home, "Missing bridge home")

_Bridge.orb_home = _Bridge.bridge_home .. "/orb"
#/lua


** Lume

=orb:orb= is effectively a entry point for the Lume.

That might not always be true, the Lume is a good design and I don't expect
to have to ditch it, but looser coupling with the rest of the system is a
priority.

So we'll retain the Orb table, even though the Lume is its only field.

#!lua
Orb.lume = require "orb:lume/lume"
#/lua

#!lua
core = nil

return Orb
#/lua
